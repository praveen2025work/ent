-- REVINFO (Hibernate Envers)
CREATE TABLE REVINFO (
    REV NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    REVTSTMP TIMESTAMP
);

-- REVCHANGES (optional for Envers)
CREATE TABLE REVCHANGES (
    REV NUMBER,
    ENTITYNAME VARCHAR2(255),
    FOREIGN KEY (REV) REFERENCES REVINFO(REV)
);

-- SECURITY_FUNCTIONALROLE
CREATE TABLE SECURITY_FUNCTIONALROLE (
    FUNCTIONALROLEID NUMBER PRIMARY KEY,
    CODE VARCHAR2(100),
    NAME VARCHAR2(255),
    DEPARTMENT VARCHAR2(100),
    ROLE VARCHAR2(100),
    USERTYPE VARCHAR2(50),
    ISREADWRITE NUMBER(1),
    ISACTIVE NUMBER(1),
    CREATEDBY VARCHAR2(100),
    CREATEDON DATE,
    UPDATEDBY VARCHAR2(100),
    UPDATEDON DATE,
    EFFECTIVEDATE DATE,
    EXPIRYDATE DATE
);

CREATE TABLE SECURITY_FUNCTIONALROLE_AUD (
    FUNCTIONALROLEID NUMBER,
    CODE VARCHAR2(100),
    NAME VARCHAR2(255),
    DEPARTMENT VARCHAR2(100),
    ROLE VARCHAR2(100),
    USERTYPE VARCHAR2(50),
    ISREADWRITE NUMBER(1),
    ISACTIVE NUMBER(1),
    CREATEDBY VARCHAR2(100),
    CREATEDON DATE,
    UPDATEDBY VARCHAR2(100),
    UPDATEDON DATE,
    EFFECTIVEDATE DATE,
    EXPIRYDATE DATE,
    REV NUMBER,
    REVTYPE NUMBER,
    FOREIGN KEY (REV) REFERENCES REVINFO(REV)
);

-- SECURITY_GROUP
CREATE TABLE SECURITY_GROUP (
    GROUPID NUMBER PRIMARY KEY,
    CODE VARCHAR2(100),
    NAME VARCHAR2(255),
    ISACTIVE NUMBER(1),
    CREATEDBY VARCHAR2(100),
    CREATEDON DATE,
    UPDATEDBY VARCHAR2(100),
    UPDATEDON DATE,
    EFFECTIVEDATE DATE,
    EXPIRYDATE DATE
);

CREATE TABLE SECURITY_GROUP_AUD (
    GROUPID NUMBER,
    CODE VARCHAR2(100),
    NAME VARCHAR2(255),
    ISACTIVE NUMBER(1),
    CREATEDBY VARCHAR2(100),
    CREATEDON DATE,
    UPDATEDBY VARCHAR2(100),
    UPDATEDON DATE,
    EFFECTIVEDATE DATE,
    EXPIRYDATE DATE,
    REV NUMBER,
    REVTYPE NUMBER,
    FOREIGN KEY (REV) REFERENCES REVINFO(REV)
);

-- SECURITY_GROUPMAP
CREATE TABLE SECURITY_GROUPMAP (
    GROUPMAPID NUMBER PRIMARY KEY,
    GROUPID NUMBER,
    GROUPMAPVALUE VARCHAR2(255),
    GROUPMAPDESC VARCHAR2(255),
    EXCLUDE NUMBER(1),
    SORT INTEGER,
    ISACTIVE NUMBER(1),
    CREATEDBY VARCHAR2(100),
    CREATEDON DATE,
    UPDATEDBY VARCHAR2(100),
    UPDATEDON DATE,
    EFFECTIVEDATE DATE,
    EXPIRYDATE DATE
);

CREATE TABLE SECURITY_GROUPMAP_AUD (
    GROUPMAPID NUMBER,
    GROUPID NUMBER,
    GROUPMAPVALUE VARCHAR2(255),
    GROUPMAPDESC VARCHAR2(255),
    EXCLUDE NUMBER(1),
    SORT INTEGER,
    ISACTIVE NUMBER(1),
    CREATEDBY VARCHAR2(100),
    CREATEDON DATE,
    UPDATEDBY VARCHAR2(100),
    UPDATEDON DATE,
    EFFECTIVEDATE DATE,
    EXPIRYDATE DATE,
    REV NUMBER,
    REVTYPE NUMBER,
    FOREIGN KEY (REV) REFERENCES REVINFO(REV)
);

-- SECURITY_FUNCTIONALROLEXREF (Assumed structure)
CREATE TABLE SECURITY_FUNCTIONALROLEXREF (
    FUNCTIONALROLEXREFID NUMBER PRIMARY KEY,
    FUNCTIONALROLEID NUMBER,
    XREFVALUE VARCHAR2(255),
    ISACTIVE NUMBER(1),
    CREATEDBY VARCHAR2(100),
    CREATEDON DATE,
    UPDATEDBY VARCHAR2(100),
    UPDATEDON DATE,
    EFFECTIVEDATE DATE,
    EXPIRYDATE DATE
);

CREATE TABLE SECURITY_FUNCTIONALROLEXREF_AUD (
    FUNCTIONALROLEXREFID NUMBER,
    FUNCTIONALROLEID NUMBER,
    XREFVALUE VARCHAR2(255),
    ISACTIVE NUMBER(1),
    CREATEDBY VARCHAR2(100),
    CREATEDON DATE,
    UPDATEDBY VARCHAR2(100),
    UPDATEDON DATE,
    EFFECTIVEDATE DATE,
    EXPIRYDATE DATE,
    REV NUMBER,
    REVTYPE NUMBER,
    FOREIGN KEY (REV) REFERENCES REVINFO(REV)
);

-- SECURITY_USERENTITLEMENTXREF
CREATE TABLE SECURITY_USERENTITLEMENTXREF (
    USERENTITLEMENTXREFID NUMBER PRIMARY KEY,
    USERID VARCHAR2(100),
    ENTITLEMENTID NUMBER,
    ISACTIVE NUMBER(1),
    CREATEDBY VARCHAR2(100),
    CREATEDON DATE,
    LASTUPDATEDBY VARCHAR2(100),
    UPDATEDON DATE,
    EFFECTIVEDATE DATE,
    EXPIRYDATE DATE
);

CREATE TABLE SECURITY_USERENTITLEMENTXREF_AUD (
    USERENTITLEMENTXREFID NUMBER,
    USERID VARCHAR2(100),
    ENTITLEMENTID NUMBER,
    ISACTIVE NUMBER(1),
    CREATEDBY VARCHAR2(100),
    CREATEDON DATE,
    LASTUPDATEDBY VARCHAR2(100),
    UPDATEDON DATE,
    EFFECTIVEDATE DATE,
    EXPIRYDATE DATE,
    REV NUMBER,
    REVTYPE NUMBER,
    FOREIGN KEY (REV) REFERENCES REVINFO(REV)
);

-- SECURITY_USERENTXREFHIST
CREATE TABLE SECURITY_USERENTXREFHIST (
    USERENTITLEMENTXREFHISTID NUMBER PRIMARY KEY,
    USERENTITLEMENTXREFID NUMBER,
    USERID VARCHAR2(100),
    ENTITLEMENTID NUMBER,
    ISACTIVE NUMBER(1),
    CREATEDBY VARCHAR2(100),
    CREATEDON DATE,
    LASTUPDATEDBY VARCHAR2(100),
    UPDATEDON DATE,
    EFFECTIVEDATE DATE,
    EXPIRYDATE DATE,
    HIST_CREATEDON DATE
); 

-- SECURITY_APPLICATION
CREATE TABLE SECURITY_APPLICATION (
    APPLICATION_ID NUMBER PRIMARY KEY,
    CODE VARCHAR2(100) UNIQUE NOT NULL,
    NAME VARCHAR2(255) NOT NULL,
    IS_ACTIVE NUMBER(1) DEFAULT 1,
    CREATED_BY VARCHAR2(100),
    CREATED_ON DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(100),
    UPDATED_ON DATE
);
CREATE SEQUENCE SECURITY_APPLICATION_SEQ START WITH 1 INCREMENT BY 1;

-- SECURITY_USER
CREATE TABLE SECURITY_USER (
    USER_ID NUMBER PRIMARY KEY,
    USERNAME VARCHAR2(100) UNIQUE NOT NULL,
    EMAIL VARCHAR2(255),
    USER_TYPE VARCHAR2(50),
    DEPARTMENT VARCHAR2(100),
    IS_ACTIVE NUMBER(1) DEFAULT 1,
    CREATED_BY VARCHAR2(100),
    CREATED_ON DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(100),
    UPDATED_ON DATE
);
CREATE SEQUENCE SECURITY_USER_SEQ START WITH 1 INCREMENT BY 1;

-- SECURITY_ROLE
CREATE TABLE SECURITY_ROLE (
    ROLE_ID NUMBER PRIMARY KEY,
    ROLE_NAME VARCHAR2(100) NOT NULL,
    IS_READ_WRITE NUMBER(1) DEFAULT 1,
    DEPARTMENT VARCHAR2(100),
    USER_TYPE VARCHAR2(50),
    IS_ACTIVE NUMBER(1) DEFAULT 1,
    CREATED_BY VARCHAR2(100),
    CREATED_ON DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(100),
    UPDATED_ON DATE
);
CREATE SEQUENCE SECURITY_ROLE_SEQ START WITH 1 INCREMENT BY 1;

-- SECURITY_USER_ROLE
CREATE TABLE SECURITY_USER_ROLE (
    USER_ROLE_ID NUMBER PRIMARY KEY,
    USER_ID NUMBER NOT NULL,
    ROLE_ID NUMBER NOT NULL,
    APPLICATION_ID NUMBER NOT NULL,
    EFFECTIVE_DATE DATE,
    EXPIRY_DATE DATE,
    CREATED_BY VARCHAR2(100),
    CREATED_ON DATE DEFAULT SYSDATE,
    CONSTRAINT FK_USER_ROLE_USER FOREIGN KEY (USER_ID) REFERENCES SECURITY_USER(USER_ID),
    CONSTRAINT FK_USER_ROLE_ROLE FOREIGN KEY (ROLE_ID) REFERENCES SECURITY_ROLE(ROLE_ID),
    CONSTRAINT FK_USER_ROLE_APP FOREIGN KEY (APPLICATION_ID) REFERENCES SECURITY_APPLICATION(APPLICATION_ID),
    CONSTRAINT UK_USER_ROLE UNIQUE (USER_ID, ROLE_ID, APPLICATION_ID)
);
CREATE SEQUENCE SECURITY_USER_ROLE_SEQ START WITH 1 INCREMENT BY 1;

-- SECURITY_FUNCTIONAL_ROLE
CREATE TABLE SECURITY_FUNCTIONAL_ROLE (
    FUNCTIONAL_ROLE_ID NUMBER PRIMARY KEY,
    APPLICATION_ID NUMBER NOT NULL,
    ENTITY_TYPE VARCHAR2(100),
    ENTITY_SUBTYPE VARCHAR2(100),
    ENTITY_GROUP VARCHAR2(100),
    ENTITY_ID NUMBER,
    IS_ACTIVE NUMBER(1),
    EFFECTIVE_DATE DATE,
    EXPIRY_DATE DATE,
    CREATED_BY VARCHAR2(100),
    CREATED_ON DATE DEFAULT SYSDATE,
    CONSTRAINT FK_FUNCTIONAL_ROLE_APP FOREIGN KEY (APPLICATION_ID) REFERENCES SECURITY_APPLICATION(APPLICATION_ID)
);
CREATE SEQUENCE SECURITY_FUNCTIONAL_ROLE_SEQ START WITH 1 INCREMENT BY 1; 